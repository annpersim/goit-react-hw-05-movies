{"version":3,"file":"static/js/115.7afe6054.chunk.js","mappings":"0OAwDA,UAnDe,WACb,OAA4BA,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MACjB,GAAsCC,EAAAA,EAAAA,MAAtC,eAAOC,EAAP,KAAoBC,EAApB,KAyBA,OAvBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAQH,EAAYI,IAAI,SADhB,wCAEd,qGACyBC,EAAAA,EAAAA,IAAgBF,GADzC,UAEkC,KAD1BG,EADR,QAEeC,QAAQC,OAFvB,iDAKIZ,GAAU,WACR,OAAO,OAAIU,EAASC,QACrB,IAPL,4CAFc,0DAYdE,EACD,GAAE,CAACT,KAWF,iCACE,kBAAMU,SAVV,SAAsBC,GACpBA,EAAEC,iBAEY,KADAD,EAAEE,OAAOV,MAAMW,OAE3Bb,EAAe,CAAEE,MAAOQ,EAAEE,OAAOV,MAAMW,OAE1C,EAIG,WACE,kBAAOC,KAAK,QAAQC,aAAa,SACjC,mBAAQC,KAAK,SAAb,wBAEF,wBACItB,EAAOa,OAELb,EAAOuB,KAAI,SAAAC,GACT,OACE,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAM1B,GAAhD,UACE,0BAAOsB,EAAMK,WAFRL,EAAME,GAMlB,IATD,SAaX,C,8LCjDDI,EAAAA,EAAAA,SAAAA,QAFiB,gCAGjBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QALU,mCAMVC,SAAU,QACVC,eAAe,GAGV,IAAMC,EAAc,mCAAG,0FACX,qBADW,SAELJ,EAAAA,EAAAA,IADN,sBADW,cAEtBK,EAFsB,yBAGrBA,EAASC,MAHY,2CAAH,qDAMd1B,EAAe,mCAAG,WAAMF,GAAN,+EACZ,eACX6B,EAAS,CACbC,OAAQ,CAAE9B,MAAOA,IAHU,SAKNsB,EAAAA,EAAAA,IAJN,eAI0BO,GALd,cAKvBF,EALuB,yBAMtBA,EAASC,MANa,2CAAH,sDASfG,EAAiB,mCAAG,WAAMC,GAAN,gFACzBC,EADyB,gBACLD,GADK,SAERV,EAAAA,EAAAA,IAAUW,GAFF,cAEzBN,EAFyB,yBAGxBA,EAASC,MAHe,2CAAH,sDAMjBM,EAAS,mCAAG,WAAMF,GAAN,gFACjBC,EADiB,gBACGD,EADH,qBAEAV,EAAAA,EAAAA,IAAUW,GAFV,cAEjBN,EAFiB,yBAGhBA,EAASC,MAHO,2CAAH,sDAMTO,EAAY,mCAAG,WAAMH,GAAN,gFACpBC,EADoB,gBACAD,EADA,qBAEHV,EAAAA,EAAAA,IAAUW,GAFP,cAEpBN,EAFoB,yBAGnBA,EAASC,MAHU,2CAAH,qD","sources":["components/Movies/Movies.jsx","services/api.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { fetchSerchQuery } from 'services/api';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const location = useLocation();\n  const [searchQuery, setSearchQuery] = useSearchParams();\n\n  useEffect(() => {\n    const query = searchQuery.get('query');\n    async function fetchData() {\n      const responce = await fetchSerchQuery(query);\n      if (responce.results.length === 0) {\n        return;\n      } else {\n        setMovies(() => {\n          return [...responce.results];\n        });\n      }\n    }\n    fetchData();\n  }, [searchQuery]);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    const query = e.target.query.value;\n    if (query !== '') {\n      setSearchQuery({ query: e.target.query.value });\n    }\n  }\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <input name=\"query\" autoComplete=\"off\" />\n        <button type=\"submit\">Search</button>\n      </form>\n      <ul>\n        {!movies.length\n          ? null\n          : movies.map(movie => {\n              return (\n                <li key={movie.id}>\n                  <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n                    <span>{movie.title}</span>\n                  </Link>\n                </li>\n              );\n            })}\n      </ul>\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst KEY = 'cfc471f0d2271b2468bfd9fc97d9b914';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\naxios.defaults.baseURL = BASE_URL;\naxios.defaults.params = {\n  api_key: KEY,\n  language: 'en-US',\n  include_adult: false,\n};\n\nexport const fetchTrendings = async () => {\n  const endPoint = 'trending/movie/day';\n  const response = await axios.get(endPoint);\n  return response.data;\n};\n\nexport const fetchSerchQuery = async query => {\n  const endPoint = 'search/movie';\n  const config = {\n    params: { query: query },\n  };\n  const response = await axios.get(endPoint, config);\n  return response.data;\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const endPoint = `movie/${movieId}`;\n  const response = await axios.get(endPoint);\n  return response.data;\n};\n\nexport const fetchCast = async movieId => {\n  const endPoint = `movie/${movieId}/credits`;\n  const response = await axios.get(endPoint);\n  return response.data;\n};\n\nexport const fetchReviews = async movieId => {\n  const endPoint = `movie/${movieId}/reviews`;\n  const response = await axios.get(endPoint);\n  return response.data;\n};\n"],"names":["useState","movies","setMovies","location","useLocation","useSearchParams","searchQuery","setSearchQuery","useEffect","query","get","fetchSerchQuery","responce","results","length","fetchData","onSubmit","e","preventDefault","target","value","name","autoComplete","type","map","movie","to","id","state","from","title","axios","api_key","language","include_adult","fetchTrendings","response","data","config","params","fetchMovieDetails","movieId","endPoint","fetchCast","fetchReviews"],"sourceRoot":""}