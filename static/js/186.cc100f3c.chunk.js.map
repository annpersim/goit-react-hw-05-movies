{"version":3,"file":"static/js/186.cc100f3c.chunk.js","mappings":"kOAoCA,UAhCgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAUA,OARAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,qGACyBC,EAAAA,EAAAA,IAAaN,GADtC,OACQO,EADR,OAEEH,GAAW,OAAIG,EAASC,UAF1B,4CADc,uBAAC,WAAD,wBAKdC,EACD,GAAE,CAACT,KAGF,gCACsB,IAAnBG,EAAQO,SACP,cAAGC,MAAO,CAAEC,OAAQ,UAApB,gDAEF,wBACGT,EAAQO,OAAS,GAChBP,EAAQU,KAAI,SAAAC,GACV,OACE,2BACE,wBAAKA,EAAOC,UACZ,uBAAID,EAAOE,YAFJF,EAAOG,GAKnB,QAIV,C,8LC7BDC,EAAAA,EAAAA,SAAAA,QAFiB,gCAGjBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QALU,mCAMVC,SAAU,QACVC,eAAe,GAGV,IAAMC,EAAc,mCAAG,0FACX,qBADW,SAELJ,EAAAA,EAAAA,IADN,sBADW,cAEtBK,EAFsB,yBAGrBA,EAASC,MAHY,2CAAH,qDAMdC,EAAe,mCAAG,WAAMC,GAAN,+EACZ,eACXC,EAAS,CACbC,OAAQ,CAAEF,MAAOA,IAHU,SAKNR,EAAAA,EAAAA,IAJN,eAI0BS,GALd,cAKvBJ,EALuB,yBAMtBA,EAASC,MANa,2CAAH,sDASfK,EAAiB,mCAAG,WAAM7B,GAAN,gFACzB8B,EADyB,gBACL9B,GADK,SAERkB,EAAAA,EAAAA,IAAUY,GAFF,cAEzBP,EAFyB,yBAGxBA,EAASC,MAHe,2CAAH,sDAMjBO,EAAS,mCAAG,WAAM/B,GAAN,gFACjB8B,EADiB,gBACG9B,EADH,qBAEAkB,EAAAA,EAAAA,IAAUY,GAFV,cAEjBP,EAFiB,yBAGhBA,EAASC,MAHO,2CAAH,sDAMTlB,EAAY,mCAAG,WAAMN,GAAN,gFACpB8B,EADoB,gBACA9B,EADA,qBAEHkB,EAAAA,EAAAA,IAAUY,GAFP,cAEpBP,EAFoB,yBAGnBA,EAASC,MAHU,2CAAH,qD","sources":["components/Reviews/Reviews.jsx","services/api.js"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { fetchReviews } from 'services/api';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    async function fetchData() {\n      const responce = await fetchReviews(movieId);\n      setReviews([...responce.results]);\n    }\n    fetchData();\n  }, [movieId]);\n\n  return (\n    <>\n      {reviews.length === 0 && (\n        <p style={{ margin: '0 10px' }}>There is no review for this movie</p>\n      )}\n      <ul>\n        {reviews.length > 0 &&\n          reviews.map(review => {\n            return (\n              <li key={review.id}>\n                <h4>{review.author}</h4>\n                <p>{review.content}</p>\n              </li>\n            );\n          })}\n      </ul>\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst KEY = 'cfc471f0d2271b2468bfd9fc97d9b914';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\naxios.defaults.baseURL = BASE_URL;\naxios.defaults.params = {\n  api_key: KEY,\n  language: 'en-US',\n  include_adult: false,\n};\n\nexport const fetchTrendings = async () => {\n  const endPoint = 'trending/movie/day';\n  const response = await axios.get(endPoint);\n  return response.data;\n};\n\nexport const fetchSerchQuery = async query => {\n  const endPoint = 'search/movie';\n  const config = {\n    params: { query: query },\n  };\n  const response = await axios.get(endPoint, config);\n  return response.data;\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const endPoint = `movie/${movieId}`;\n  const response = await axios.get(endPoint);\n  return response.data;\n};\n\nexport const fetchCast = async movieId => {\n  const endPoint = `movie/${movieId}/credits`;\n  const response = await axios.get(endPoint);\n  return response.data;\n};\n\nexport const fetchReviews = async movieId => {\n  const endPoint = `movie/${movieId}/reviews`;\n  const response = await axios.get(endPoint);\n  return response.data;\n};\n"],"names":["movieId","useParams","useState","reviews","setReviews","useEffect","fetchReviews","responce","results","fetchData","length","style","margin","map","review","author","content","id","axios","api_key","language","include_adult","fetchTrendings","response","data","fetchSerchQuery","query","config","params","fetchMovieDetails","endPoint","fetchCast"],"sourceRoot":""}